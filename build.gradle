buildscript {
	repositories {
		mavenCentral()
		maven {
			name = "Fabric"
			url = "https://maven.fabricmc.net/"
		}
	}
	dependencies {
		classpath "net.fabricmc:fabric-loom:0.5-SNAPSHOT"
	}
}

plugins {
	id 'java'
	id 'maven-publish'
	id 'jacoco'
	id "me.champeau.gradle.jmh" version "0.5.2"
}

apply plugin: net.fabricmc.loom.LoomGradlePlugin

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = "energy"
group = "teamreborn"

def getVersionName = { ->
	def stdout = new ByteArrayOutputStream()
	exec {
		commandLine 'git', 'describe', '--tags'
		standardOutput = stdout
	}
	return stdout.toString().trim()
}

version = getVersionName()
logger.lifecycle("Building Energy: " + version)

repositories {
	maven {
		name = 'Legacy Fabric Maven'
		url = 'https://dl.bintray.com/legacy-fabric/Legacy-Fabric-Maven/'
	}
	mavenCentral()
}

dependencies {
	minecraft "com.mojang:minecraft:1.8.9"
	mappings "net.fabricmc:yarn:1.8.9+build.202011050955:v2"

	modImplementation  "net.fabricmc:fabric-loader-1.8.9:0.9.3+build.202009100647"

	testCompile 'junit:junit:4.12'
}

processResources {
	inputs.property "version", project.version.toString()

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version.toString()
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

jar {
	from "LICENSE"
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
	archiveClassifier = 'sources'
}

javadoc {
	source = sourceSets.main.allJava
}

jmh {
	duplicateClassesStrategy = DuplicatesStrategy.EXCLUDE
	iterations = 5
	fork = 2
}

build.dependsOn jacocoTestReport
build.dependsOn test
build.dependsOn javadoc
build.dependsOn sourcesJar

publishing {
	publications {
		maven(MavenPublication) {
			groupId 'teamreborn'
			artifactId project.archivesBaseName
			version project.version

			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}
	repositories {
		maven {
			url "http://mavenupload.modmuss50.me/"
			if (project.hasProperty('mavenPass')) {
				credentials {
					username 'buildslave'
					password project.getProperty('mavenPass')
				}
			}
		}
	}
}
